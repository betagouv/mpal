- @document_blocks.each_with_index do |block, block_id|
  .document-block
    p.document-block__title = block[:title]

    - block[:groups].each_with_index do |group, group_id|
      .document-group
        p.document-group__title = I18n.t("document.condition.#{group[:condition]}", total: group[:elements].count)

        - group[:elements].each_with_index do |element, element_id|
          - id = "#{block_id}-#{group_id}-#{element_id}"

          div class="document-panel document-panel--#{(group[:condition] != :none && element[:missing]) ? "missing" : "present"} test-document-panel-#{id}"
            .document-panel-header= I18n.t("document.#{block[:payment_id] ? "payment" : "projet"}.#{element[:type]}")

            - unless element[:missing]
              ul.document-panel-body
                - element[:documents].each do |document|
                  li.document

                    .document-name-container
                      .document-icon
                        i.glyphicon.glyphicon-file
                      .document-name
                        - if can? :show, document
                          = link_to document.label, document.fichier_url, target: :_blank, class: "document__link"
                        - else
                          = document.label

                      - if can? :destroy, document
                        .document-actions
                          - if block[:payment_id].present?
                            - delete_path = dossier_payment_document_path(@projet_courant, block[:payment_id], document)
                          - else
                            - delete_path = projet_or_dossier_document_path(@projet_courant, document)
                          = link_to delete_path, method: :delete, data: { confirm: t("document.messages.delete.confirmation") }
                            i.glyphicon.glyphicon-trash

                      .document-upload-time= document.created_at.strftime("%d/%m/%Y %Hh%M")

                    .document-comment-container
                      - document.pjnotes.order(updated_at: :DESC).each_with_index do |aNote, i|
                        - if i <= 0
                          div.comment-container.main-comment-container.limit-comment-display
                            div.comment-text #{aNote.notecontent}

                            div.comment-action-container
                              span.comment-updated-at #{aNote.updated_at.strftime("%d/%m/%Y %Hh%M")}

                              - if can? :manage, aNote
                                - if current_agent
                                  = link_to edit_projet_or_dossier_pjnote_path(@projet_courant, aNote)
                                    span.comment-edit
                                      span.glyphicon.glyphicon-pencil

                              - if can? :manage, aNote
                                - if current_agent
                                  = link_to projet_or_dossier_pjnote_path(@projet_courant, aNote), method: :delete
                                    span.comment-delete
                                      span.glyphicon.glyphicon-trash


                        - else
                          div.comment-container.comment-older
                            div.comment-text #{aNote.notecontent}

                            div.comment-action-container
                              span.comment-updated-at #{aNote.updated_at.strftime("%d/%m/%Y %Hh%M")}

                              - if can? :manage, aNote
                                - if current_agent
                                  = link_to edit_projet_or_dossier_pjnote_path(@projet_courant, aNote)
                                    span.comment-edit
                                      span.glyphicon.glyphicon-pencil

                              - if can? :manage, aNote
                                - if current_agent
                                  = link_to projet_or_dossier_pjnote_path(@projet_courant, aNote), method: :delete
                                    span.comment-delete
                                      span.glyphicon.glyphicon-trash
                            br


                      .document-new-comment.comment-older
                        - if (current_agent and current_agent.intervenant) || @projet_courant.demande.seul
                          - if can? :manage, Pjnote
                            = simple_form_for Pjnote.new, url: projet_or_dossier_pjnotes_path, html: { class: "form form-inline pj-note-textarea" } do |f|
                              = f.input :notecontent, label: 'Entrez votre commentaire :'
                              = hidden_field_tag :projet_id, @projet_courant.id
                              = hidden_field_tag :document_id, document.id
                              = hidden_field_tag :intervenant_id, current_agent.intervenant.id if current_agent
                              = f.button :submit, t("document.pjnote.commenter"), class: 'ripple push-ton-com'

                      div.more-comment plus ...

            - if can? :create, Document
              - if block[:payment_id].present?
                - create_path = dossier_payment_documents_path(@projet_courant, block[:payment_id])
              - else
                - create_path = projet_or_dossier_documents_path(@projet_courant)
              = form_tag create_path, class: "document-panel-footer", multipart: true, id: "form-#{id}" do
                = file_field_tag :fichier, id: "document-file-upload-#{id}", class: "document-file-upload-invisible js-document__file", onchange: "updateImageDisplay('#{id}');"
                = hidden_field_tag :type_piece, element[:type]
                = label_tag "document-file-upload-#{id}", class: "btn btn-secondary btn-small document-file-upload"
                  = t("document.select")
                / = btn name: t("document.send"), class: "btn-secondary btn-small document__send-button js-document__send-button"
                / .document-file-added.js-document__file-added

= btn name: t('document.continuer'), href: projet_or_dossier_path(@projet_courant), class: 'proposal proposal-btn'

javascript:
  $(document).ready(function() {
    $('.document-comment-container').find('.comment-older').hide();

    $('.more-comment').on('click', function(e) {
      var parentContainer = $(this).parent('.document-comment-container');

      if (undefined != parentContainer && null != parentContainer && parentContainer.length > 0) {
        var olderComment = $(parentContainer).find('.comment-older');
        var mainComment = $(parentContainer).find('.main-comment-container');

        console.log(mainComment);

        if (undefined != olderComment && null != olderComment && olderComment.length > 0) {
          $(mainComment).toggleClass('limit-comment-display');
          if ($(olderComment).css('display') == 'none') {
            $(this).text('moins ...');
            $(olderComment).show();
          }
          else {
            $(this).text('plus ...');
            $(olderComment).hide();
          }
        }
      }
    });
  });

  function updateImageDisplay(id) {
    var input = document.getElementById('document-file-upload-' + id);
    var curFiles = input.files;
    if(curFiles.length === 0) {
      console.log("pas de document choisit");
      return ;
    }
    if (curFiles.length > 1)
    {
      console.log("plus d'un document choisit");
      return;
    }
    var r = confirm("Êtes-vous sûr de vouloir ajouter le fichier: '" + curFiles[0].name + "'?");
    if (r == true)
      document.getElementById('form-' + id).submit();
    else
      input.value = "";
  }
