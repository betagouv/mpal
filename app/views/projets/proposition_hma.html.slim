= simple_form_for @projet_courant, url: projet_or_dossier_proposition_path(@projet_courant), html: { method: :put, class: "form form-proposition" } do |f|
  = render "shared/errors", resource: @projet_courant
  .occupants-recap Opérateur : #{@projet_courant.operateur.raison_sociale}

  fieldset.form-proposition__fieldset
    legend.form-proposition__legend Projet de travaux
    = f.input :numero_siret, wrapper: "append", wrapper_html: { class: "size-s" } do
      = f.input_field :numero_siret, class: "input-number siretNum", input_html: {value: @projet_courant.numero_siret.present? ? @projet_courant.numero_siret : ""}
    = f.input :nom_entreprise, wrapper: "append", wrapper_html: { class: "size-s" } do
      = f.input_field :nom_entreprise, class: "input-number nomEntreprise", input_html: {value: @projet_courant.nom_entreprise.present? ? @projet_courant.nom_entreprise : ""}
    = f.input :cp_entreprise, wrapper: "append", wrapper_html: { class: "size-s" } do
      = f.input_field :cp_entreprise, class: "input-number cpEntreprise", input_html: {value: @projet_courant.cp_entreprise.present? ? @projet_courant.cp_entreprise : ""}

    = f.input :date_de_visite, as: :string, wrapper_html: { class: "size-s" }, input_html: { value: @projet_courant.date_de_visite? ? l(@projet_courant.date_de_visite) : "" }
  fieldset.form-proposition__fieldset
    legend.form-proposition__legend Plan de financement prévisionnel
    .form-inline2

      br
      div.cat-flex-box-home
        span.line-home
        span.subtitle-home COUT DES TRAVAUX
        span.line-home
      br

      = f.fields_for :hma do |hma_form|

        = hma_form.input :devis_ht, wrapper: "append", wrapper_html: { class: "size-s" } do
          = hma_form.input_field :devis_ht, class: "input-price js-global-ht-part devisHT", input_html: {value: @projet_courant.hma.devis_ht}
          span.input-group-addon €

        = hma_form.input :devis_ttc, wrapper: "append", wrapper_html: { class: "size-s" } do
          = hma_form.input_field :devis_ttc, class: "input-price js-global-ttc-part devisTTC"
          span.input-group-addon €

        = hma_form.input :moa, wrapper: "append", wrapper_html: { class: "size-s" } do
          = hma_form.input_field :moa, class: "input-price js-global-ttc-part amountMOA"
          span.input-group-addon €

        = hma_form.input :localized_global_ttc_sum, wrapper: "append", wrapper_html: { class: "size-s" } do
          = hma_form.input_field :localized_global_ttc_sum, class: "input-price", id: "js-global-ttc-sum", disabled: true
          span.input-group-addon €

      br
      div.cat-flex-box-home
        span.line-home
        span.subtitle-home MONTANT DES AIDES SOLICITEES
        span.line-home
      br

      = f.simple_fields_for :projet_aides do |ff|
        - aid = ff.object.aide
        - if nil != aid
          - if aid.public
            = ff.input :localized_amount, label: aid.libelle, wrapper: "append", wrapper_html: { class: "size-s" } do
              - classes = "input-price #{aid.public? ? "js-public-aid js-funding" : ""}"
              = ff.hidden_field :aide_id, value: aid.id
              = ff.input_field :localized_amount, class: classes, value: ff.object.localized_amount || ""
              span.input-group-addon €
          end
        end

      = f.input :localized_public_aids_sum, wrapper: "append", wrapper_html: { class: "size-s" } do
        = f.input_field :localized_public_aids_sum, class: "input-price", id: "js-public-aids-sum", disabled: true
        span.input-group-addon €

      = f.simple_fields_for :projet_aides do |ff|
        - aid = ff.object.aide
        - if nil != aid
          - if !aid.public
            = ff.input :localized_amount, label: aid.libelle, wrapper: "append", wrapper_html: { class: "size-s" } do
              - classes = "input-price js-private-aid #{aid.public? ? "js-funding" : ""}"
              = ff.hidden_field :aide_id, value: aid.id
              = ff.input_field :localized_amount, class: classes, value: ff.object.localized_amount || ""
              span.input-group-addon €
          end
        end

      br
      div.cat-flex-box-home
        span.line-home
        span.subtitle-home RESTE A CHARGE PREVISIONNEL
        span.line-home
      br

      - [:personal_funding_amount, :loan_amount].each do |field|
        - localized_field = "localized_#{field}"
        = f.input localized_field, wrapper: "append", wrapper_html: { class: "size-s" } do
          = f.input_field localized_field, class: "input-price js-funding"
          span.input-group-addon €

      br
      div.cat-flex-box-home
        span.line-home
        span.subtitle-home TOTAL PREVISIONNEL DES FINANCEMENTS
        span.line-home
      br

      = f.input :localized_fundings_sum, wrapper: "append", wrapper_html: { class: "size-s" } do
        = f.input_field :localized_fundings_sum, class: "input-price", id: "js-fundings-sum", disabled: true
        span.input-group-addon €

      br
      div.cat-flex-box-home
        span.line-home
        span.subtitle-home Contrôle / Dépenses / Recettes
        span.line-home
      br

      = f.input :localized_remaining_sum, wrapper: "append", wrapper_html: { class: "size-s" } do
        = f.input_field :localized_remaining_sum, class: "input-price", id: "js-remaining-sum", disabled: true
        span.input-group-addon €

  br

  = f.fields_for :hma do |hma_form|
    = hma_form.input :ptz, wrapper: "append", wrapper_html: { class: "size-s" } do
      = hma_form.input_field :ptz, class: "input-price", id: "PTZDate", placeholder: "aaaa-mm-dd"

  = f.input :precisions_travaux, :input_html => {:maxlength => 250, :onkeyup => "countChar(this, 'precisions_travaux_count')"}
  <div class="char-count" id="precisions_travaux_count">250 caractère(s) restant</div>
  = f.input :precisions_financement, :input_html => {:maxlength => 250, :onkeyup => "countChar(this, 'precisions_financement_count')"}
  <div class="char-count" id="precisions_financement_count">250 caractère(s) restant</div>

  = btn name: 'Enregistrer cette proposition', icon: 'save', class: "btn-validate-submit"
  <p class="alert alert-danger invalidSiret" style="display: none;">Valeur du numéro de SIRET incohérente ou format INVALIDE</p>

javascript:

  function countChar(val, inject) {
    var len = val.value.length;
    if (len > 250) {
      val.value = val.value.substring(0, 250);
    } else {
      $('#' + inject).text(250 - len + " caractère(s) restant");
    }
  };

  $(function() {
    $( "#PTZDate" ).datepicker({ dateFormat: 'yy-mm-dd'});
  });

  function verif_siren_siret(num, len) {
    var is_valid;
    if ((num.length != 14) || (isNaN(num)))
      is_valid = false;
    else {
      var mod;
      mod = len == 14 ? 0 : 1;
      var somme = 0;
      var tmp;
      for (var cpt = 0; cpt < num.length && cpt < len; cpt++) {
        if ((cpt % 2) == mod) {
          tmp = num.charAt(cpt) * 2;
          if (tmp > 9)
            tmp -= 9; // AWESOME ! GENIEEEEEWWWWS
        }
        else
          tmp = num.charAt(cpt);
        somme += parseInt(tmp);
      }
      if ((somme % 10) == 0)
        is_valid = true; // Si la somme est un multiple de 10 alors le SIRET est valide
      else
        is_valid = false;
    }
    return is_valid;
  }

  $('.btn-validate-submit').click(function(e) {
    e.preventDefault();
    var validSiret = false;

    var numSiret = ($('.siretNum').val().toString()).replace(/\s+/g, '');

    if (undefined != numSiret && "" != numSiret) {
      if (verif_siren_siret(numSiret, 9) && verif_siren_siret(numSiret, 14))
        validSiret = true;
    }

    if (validSiret)
      $('.simple_form').submit();
    else {
      if (!validSiret)
        $('.invalidSiret').css("display", "block");
    }
  });