- content_for :popins do
	#api-particulier.popin.popin--numero-fiscal
		.popin-container
			p.popin-p#text__p Les données d'avis d'impositions et d'occupants du projet vont être mis à jour.
			p.popin-p.popin-p-centered
				= btn name: "Annuler", href: "#", class: "popin-close api-particulier-close"
				= btn name: "Confirmer", href: "#", class: "btn popin-confirm api-particulier_confirm"

- current_agent_instructeur = current_agent.instructeur?
- current_agent_operateur = current_agent.operateur?
- current_agent_siege = current_agent.siege?

.dashboard-dossiers
	- items = @invitations || @dossiers
	- traite = @traited
	- action = @action
	- verif = @verif
	- other = @others
	- new_msg = @new_msg
	- rfrn2 = @rfrn2
	- rfr_count = custom_count_each_tab @rfrn2

	- inactifs = @inactifs
	= render "search_form_dashboard", url: dossiers_path, show_export_button: items.present?

	- if items.present?
		div.dashboard-container
			ul.dashboard-tab-container
				li.dashboard-tab.tabTreated
					a Traités (#{custom_count_each_tab @traited})
				li.dashboard-tab.tabAction
					a Nécessite action (#{custom_count_each_tab @action})
				li.dashboard-tab.tabVerif
					a Nécessite vérification (#{custom_count_each_tab @verif})
				li.dashboard-tab.tabOthers
					a Autres (#{custom_count_each_tab @others})
				li.dashboard-tab.tabNewMSG
					a Nouveau Message (#{custom_count_each_tab @new_msg})
				li.dashboardTab.tabRFRN2
					a RFR à mettre à jour (#{rfr_count})
				li.dashboardTab.tabInactifs
					a Inactifs (#{custom_count_each_tab @inactifs})
				li.dashboard-tab.tabAll
					- if @dossiers.present?
						a Tous (#{custom_count_each_tab @dossiers})
					- else
						a Tous (#{custom_count_each_tab @invitations})

			div.tab-content

				// Traités
				div.tabs-item.tabTreated
					table
						- traite.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if traite.respond_to?(:total_pages) && 1 < traite.total_pages
						= render "shared/paginate", items: traite, cur_page: "page_traited"

				// Nécessite action
				div.tabs-item.tabAction
					table
						- action.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if action.respond_to?(:total_pages) && 1 < action.total_pages
						= render "shared/paginate", items: action, cur_page: "page_action"

				// Nécessite vérification
				div.tabs-item.tabVerif
					table
						- verif.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if verif.respond_to?(:total_pages) && 1 < verif.total_pages
						= render "shared/paginate", items: verif, cur_page: "page_verif"

				// Autres
				div.tabs-item.tabOthers
					table
						- other.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if other.respond_to?(:total_pages) && 1 < other.total_pages
						= render "shared/paginate", items: other, cur_page: "page_other"

				// Nouveau message
				div.tabs-item.tabNewMSG
					table
						- new_msg.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if new_msg.respond_to?(:total_pages) && 1 < new_msg.total_pages
						= render "shared/paginate", items: new_msg, cur_page: "page_new_msg"

				// RFR N-2
				div.tabs-item.tabRFRN2
					table
						- rfrn2.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if items.respond_to?(:total_pages) && 1 < items.total_pages
						= render "shared/paginate", items: items, cur_page: "page_rfrn2"

				// Inactifs
				div.tabs-item.tabInactifs
					table
						- inactifs.each do | item |							
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							- if projet.actif === 0
								tr id="projet_#{projet.id}-all"
									td
										p = anonymize anonymized, edit_url do
											= projet.numero_plateforme

										- if projet.opal_numero.present?
											- if current_agent_instructeur
												p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
											- else
												p = anonymize anonymized, edit_url do
													= projet.opal_numero
										- else
											p &nbsp;
									td
										p = anonymize anonymized, edit_url do
											span.firstname= projet.demandeur_prenom
											span.lastname<= projet.demandeur_nom
										p = projet.addr_ville + " " + projet.addr_code
									td
										- if projet.libelle_theme
											p = anonymize anonymized, edit_url do
												= projet.libelle_theme
										- else
											p Type d'intervention inconnu
										p &nbsp;
									td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
											- if projet.statut_updated_date.present?
												div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
											- else
												div.dashboard-date-text-2 Depuis le: Inconnu
										div
											- if projet.ift_intervenant.present?
												= projet.ift_intervenant + " - " + projet.ift_agent
											- else
												p &nbsp;
									td.table-row-icons-border.firstRowIcons
										= link_to projet_or_dossier_path(projet)
											p 
												span.glyphicon.glyphicon-folder-open
											p Dossier
									td.table-row-icons-border
										- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
											= link_to projet_or_dossier_payments_path(project)
												p 
													span.glyphicon.glyphicon-euro
												p Paiement
										- else
											p 
												span.glyphicon.glyphicon-euro.paiement-inactive
											p Paiement
									td.table-row-icons-border
										= link_to projet_or_dossier_documents_path(projet)
											p 
												span.glyphicon.glyphicon-paperclip
											p Pièces
									td.table-row-icons-border
										= link_to new_projet_or_dossier_message_path(projet)
											- if current_agent
												- unread_messages_count = 0
											p 
												span.glyphicon.glyphicon-envelope
											p Messages
									td.table-row-icons-border
										= link_to projet_or_dossier_intervenants_path(projet)
											p 
												span.glyphicon.glyphicon-user
											p Contacts
									td.table-row-icons-border
										- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
											= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
												p
													span.glyphicon.glyphicon-eye-close
												p Desactiver
										- if projet.actif === 0
											= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
												p
													span.glyphicon.glyphicon-eye-open
												p Activer
					- if inactifs.respond_to?(:total_pages) && 1 < inactifs.total_pages
						= render "shared/paginate", items: inactifs, cur_page: "page_inactifs"


				// TOUS
				div.tabs-item.tabAll
					table
						- items.each do | item |
							- projet = item.is_a?(Invitation) ? item.projet : item
							- anonymized = item.is_a?(Invitation) ? projet.is_anonymized_for?(item.intervenant) : false
							- edit_url = dossier_path(projet)
							tr id="projet_#{projet.id}-all"
								td
									p = anonymize anonymized, edit_url do
										= projet.numero_plateforme

									- if projet.opal_numero.present?
										- if current_agent_instructeur
											p = link_to projet.opal_numero, dossier_opal_url(projet.opal_numero), target: "_blank"
										- else
											p = anonymize anonymized, edit_url do
												= projet.opal_numero
									- else
										p &nbsp;
								td
									p = anonymize anonymized, edit_url do
										span.firstname= projet.demandeur_prenom
										span.lastname<= projet.demandeur_nom
									p = projet.addr_ville + " " + projet.addr_code
								td
									- if projet.libelle_theme
										p = anonymize anonymized, edit_url do
											= projet.libelle_theme
									- else
										p Type d'intervention inconnu
									p &nbsp;
								td
									div.dashboard-date-text-container = anonymize anonymized, edit_url do
										div.dashboard-date-text-1
											- if projet.opal_position_label
												= projet.opal_position_label
											- else
											 	= t(projet.status_for_intervenant, scope: "projets.statut")
										- if projet.statut_updated_date.present?
											div.dashboard-date-text-2 = "Depuis le: " + projet.statut_updated_date.strftime("%d/%m/%Y")
										- else
											div.dashboard-date-text-2 Depuis le: Inconnu
									div
										- if projet.ift_intervenant.present?
											= projet.ift_intervenant + " - " + projet.ift_agent
										- else
											p &nbsp;
								td.table-row-icons-border.firstRowIcons
									= link_to projet_or_dossier_path(projet)
										p 
											span.glyphicon.glyphicon-folder-open
										p Dossier
								td.table-row-icons-border
									- if ENV["PAYMENTS_ENABLED"] == "true" && (can? :index, Payment)
										= link_to projet_or_dossier_payments_path(project)
											p 
												span.glyphicon.glyphicon-euro
											p Paiement
									- else
										p 
											span.glyphicon.glyphicon-euro.paiement-inactive
										p Paiement
								td.table-row-icons-border
									= link_to projet_or_dossier_documents_path(projet)
										p 
											span.glyphicon.glyphicon-paperclip
										p Pièces
								td.table-row-icons-border
									= link_to new_projet_or_dossier_message_path(projet)
										- if current_agent
											- unread_messages_count = 0
										p 
											span.glyphicon.glyphicon-envelope
										p Messages
								td.table-row-icons-border
									= link_to projet_or_dossier_intervenants_path(projet)
										p 
											span.glyphicon.glyphicon-user
										p Contacts
								td.table-row-icons-border
									- if projet.actif === 1 && projet.status_not_yet(:transmis_pour_instruction)
										= link_to :controller => "dossiers", :action => "desactivate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-close
											p Desactiver
									- if projet.actif === 0
										= link_to :controller => "dossiers", :action => "activate", :dossier_id => projet.id do
											p
												span.glyphicon.glyphicon-eye-open
											p Activer
					- if items.respond_to?(:total_pages) && 1 < items.total_pages
						= render "shared/paginate", items: items, cur_page: "page"

javascript:
	$(document).ready(function() {
		$("html").keypress(function(e) {
			if (e.which == 13)
				$('.dashboardFilterSearchButton').trigger('click');
		});
		var sPageURL = location.search.substring(1);
		var searchFormElement = {
			"query": $('.dashboard-filter-free-search input'),
			"status": $('.dashboard-filter-state select'),
			"type": $('.dashboard-filter-status select'),
			"folder" : $('.dashboardFilterFolderNumber input'),
			"tenant" : $('.dashboardFilterTenantName input'),
			"location": $('.dashboardFilterLocation input'),
			"interv": $('.dashboardFilterInterv input'),
			"from": $('.dashboardFilterFrom input'),
			"to": $('.dashboardFilterTo input')
		};
		// Hide Tabs
		var rfrn2 = '#{rfr_count}';

		if (rfrn2 == 0)
			$('.tabRFRN2').hide();
		
		$('.tabNewMSG').hide();

		if (null != sPageURL && "" != sPageURL && undefined != sPageURL) {
			var jsonURL = JSON.parse('{"' + decodeURI(sPageURL).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g,'":"') + '"}');
			var search = [];
			for (var index in jsonURL) {
				if (jsonURL.hasOwnProperty(index)) {
					if (index != "utf8") {
						var indexData = index.split("[");
						if (undefined !== indexData[1]) {
							var newArrayTmp = indexData[1].split("]")[0];

							// Restore advanced menu state
							if ("advanced" == newArrayTmp) {
								if (jsonURL[index] == "true") {
									$(".dashboardFilterAdvancedCheckbox").prop('checked', true);
									$(".dashboardFilterAdvancedCheckbox").trigger("change");
								}
							}
							// Restore active Tab
							if ("activeTab" == newArrayTmp)
								var testTab = $('.dashboardContainer ul.dashboardTabContainer').find('> li:eq(' + jsonURL[index] + ')').find("a").trigger('click');
							// Restore filter "order by (ascendent / descendant, date de depot / date de creation)"
							if ("sort_by" == newArrayTmp) {
								if (~jsonURL[index].indexOf("DESC"))
									$("#descend").prop('checked', true);
								else if (~jsonURL[index].indexOf("ASC"))
									$("#ascend").prop('checked', true);

								if (~jsonURL[index].indexOf("depot"))
									$("#dateDeDepot").prop('checked', true);
								else if (~jsonURL[index].indexOf("created"))
									$("#dateDeCreation").prop('checked', true);
							}
							// Restore other filters
							if ("" != jsonURL[index] && "advanced" != newArrayTmp && "activeTab" != newArrayTmp && "sort_by" != newArrayTmp) {
								if (searchFormElement.hasOwnProperty(newArrayTmp))
									searchFormElement[newArrayTmp].val(jsonURL[index]);
							}
						}
					}
				}
			}
		}
	});